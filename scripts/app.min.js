//@prepros-append "../components/menu/menu.js"
//@prepros-append "../components/info/info.js"
//@prepros-append "../components/lang/lang.js"
//@prepros-append "../components/img-holder/img-holder.js"

//@prepros-append "../components/main.js"
$(function(){

	var $element = $('.menu');
	var $menu_items = $('.menu__items');
	var $btn = $('.btns');
	var $item;
	var lan;
	var current_item;



	if( $element.length<1 ) {
		console.warn('No Menu element found!');
		return;
	}

	var data;

	//console.log('#Menu: element:', $element );
	
	// INIT CONTENT
	$(window).on('main:ready', function( event, _data ) {

		data = _data;

		//HANDLEBARS
		var source = document.getElementById( "tmpl-sidebar-menu" ).innerHTML;
		template = Handlebars.compile(source);

		$menu_items.empty();
		$btn.empty();

		// Generate menu items
		// data.menu.forEach(function( e, i ) {
			
		// 	//console.log('item',i,e);
		// if( e.title ) {
				
		// 	var $adding_el = 
		// 		$('<p class="menu__item"><a href="'+e.href+'">'+e.title.ru+'</a></p>')
		// 			.appendTo($menu_items)
		// 			.data('menu-index', i )
		// } else {
		// 	$('<div class="menu__line"></div>').appendTo($menu_items);
		// }
		// });

		var $adding_btn;

		data.buttons.forEach(function(e, i) {

			console.log('item',i,e);
			$adding_btn = $('<button class="btns__btn">'+e.text+'</button>');
			$adding_btn.appendTo($btn).appendTo($element);

			if( e.theme == "dark" ) {
				$adding_btn.addClass('btns__btn_dark');
			}	
		});


		
		init_menu(data.start_content);


	});

	// LANG
	$(window).on("language:changed", function(evt, language_name) {
		//console.log("#Main: language:changed: ["+language_name+"]", evt);
		// var $menu_items_item = $( '.menu__item>a', $element ); 

		// //console.log('$menu_items_item: ', $menu_items_item );

		// $menu_items_item.each(function(i, e ) {
		// 	// console.log(i,e,$(e).parent().data('menu-index'));
		// 	$(e).text( data.menu[ $(e).parent().data('menu-index') ].title[ language_name ] );
		// });
		lan = language_name;
		$menu_items.empty();
		init_menu(current_item || data.start_content);
		
	});


	$menu_items.on("click", function(event) {

		// console.log("CLICK: ", event.target );
		var $item = $(event.target);
		if( $item.hasClass('menu__item') ){
			$('.menu__item').removeClass('menu__item_active');
			$item.addClass('menu__item_active');
			//console.log('click on a item!', $item.data('content-id') );
			current_item = $item.data('content-id');
			$(window).trigger("content:changed", $item.data('content-id') );
		}

	});

	function init_menu(page) {
		$menu_items.empty();
		var _menu = data.menu;
		var menu = {};
		var html = '';
		_menu.forEach( function(e,i) {
			menu.title = e.title[lan];
			menu.href = e.href;
			menu.content_id = e.content_id;
			menu.language = lan;

			html += template(menu);
		});

		$( html ).appendTo( $( '.menu__items' ) );
	
		_content = data.content[page];
		

		$('.menu__item:contains('+_content.title[lan]+')').addClass('menu__item_active');
	}

});
$(function(){

	var data;
	var template;
	var $menu = $('.menu__items');
	var lan, content_id;
	var $content = $('.content');

	// INIT CONTENT
	$(window).on('main:ready', function( event, _data ) {

		var source = document.getElementById( "tmpl-content-info" ).innerHTML;
		template = Handlebars.compile(source);

		data = _data;
		lan = data.start_language;
		content_id = data.start_content;
	});


	$(window).on('language:changed', function(evt, language_name ){
		$content.empty();
		lan = language_name;
		init_content( content_id, lan);
	});



	$(window).on("content:changed", function(evt, _content_id) {
		content_id = _content_id;
		init_content( content_id, lan);
	});

	function init_content( page, lan ) {
		$content.fadeOut( 200, function() {
			_init_content(content_id, lan);
		}).fadeIn( 200 );
	}

	function _init_content( page, lan ) {

		$content.empty();
		var _content = data.content[page];
		//console.log('CONTENT-INFO:', _content)

		var content = {};
		content.title = _content.title[lan];
		content.texts = _content.texts[lan];
		content.url = _content.img.url;
		
		content.language = lan;
		//console.log('CONTENT-CHANGE: ', content.texts);

		var html = template( content );
		$( html ).appendTo( $( '.content' ) );
		
	}



});

$(function(){

	var $element = $('.lang');
	if( $element.length<1 ) {
		console.warn('No Lang element fond!');
		return;
	} 

	$element.empty();

	console.log('#Lang: element:', $element );

	// INTIALIZATION
	$(window).on('main:ready', function( event, data ) {

		console.log('#Lang: ', data );
		
		var $adding_el = '<select>';
		data.lang.forEach(function(e,i) {

			$adding_el += '<option>'+ e +'</option>';
		});

		$adding_el+='</select>';
		$($adding_el).appendTo($element);

		console.log("LANG: ", $( $('select', data.start_language )));
		$(window).trigger("language:changed", data.start_language );
	});


	// ON CHANGE LANGUAGE EVENT
	$element.change( function() {
		
		$element.css('border', '6px solid grey');
		var $option = $('select', $element ).val();
		console.log($option);

		$(window).trigger("language:changed", $option );
	});
	
	
});
$(function() {
	var data;


	
	// INIT CONTENT
	$(window).on('main:ready', function( event, _data ) {

		data = _data;

		// var source = document.getElementById( "tmpl-content-img" ).innerHTML;
		// template = Handlebars.compile(source);

		// var _content = data.content['save and multiply'].img;
		// var content = {};
		// content.img = _content.url;
		// content.title = content.title;
	
		// var html = template( content );
		// $( html ).appendTo( $( '.content' ) );

		// console.log("IMG:", content );
	


	});
});
$(function() {
	
	var data;

	$.get("assets/data.json", function(_data) {

		data = _data;
		console.log('#Main: data is loaded: ', _data );

		data.start_language = data.lang[0];
		
		for ( var i in data.content) {
			data.start_content = data.content[i].title.en;
			break;
		}

		$(window).trigger('main:ready', data );

	});


	console.log("#Main: main is ready!", data);


	// CHANGE LANGUAGE FOR STATIC CONTENTS
	$(window).on("language:changed", function(evt, language_name) {
		
		// TRANSLATE STATIC TEXTS
		$('[data-trnslt]').each(function(i,e){
			// console.log('=>', i, e);
			var key = $(e).data('trnslt');
			if( !key ) return;
			var trnslt = data.translate[ key ];
			if( !trnslt ) {
				console.warn("there's no a such translation for:", key );
				return;
			}
			$(e).text( trnslt[ language_name ] );
		});

		// TITLE
		var $page_name = $('head title');
		var page_title = data.content[data.start_content].title;
		$page_name.text(page_title[language_name]);

	});


	// WINDOW RESIZE
	$(window).resize(function() {
		var $b = $('body');
		
		$b.toggleClass('is_mobile', window.innerWidth < 768 );
	
		$b.toggleClass('is_tablet', window.innerWidth >= 768 && window.innerWidth < 1024 );
		
		$b.toggleClass('is_desktop', window.innerWidth > 1024);
		
		$(window).trigger("window-size:changed");
	});


});


//# sourceMappingURL=app.min.js.map